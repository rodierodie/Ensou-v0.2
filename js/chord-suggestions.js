/**
 * chord-suggestions.js
 * –ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–∫–∫–æ—Ä–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–∏–∏
 */

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Ñ—É–Ω–∫—Ü–∏—è–º–∏
const harmonicTransitions = {
  "tonic": { 
    "subdominant": 0.4, 
    "dominant": 0.35, 
    "tonic": 0.25 
  },
  "subdominant": { 
    "dominant": 0.5, 
    "tonic": 0.3, 
    "subdominant": 0.2 
  },
  "dominant": { 
    "tonic": 0.7, 
    "subdominant": 0.2, 
    "dominant": 0.1 
  }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∞–∫–∫–æ—Ä–¥–æ–≤
let currentSuggestions = [];

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –∞–∫–∫–æ—Ä–¥–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–∫–∫–æ—Ä–¥–∞ –∏ —Ç–µ–∫—É—â–µ–π —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 * @param {string} lastChordName - –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–∫–∫–æ—Ä–¥–∞
 * @param {string} tonality - –¢–µ–∫—É—â–∞—è —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
 * @returns {Array} - –ú–∞—Å—Å–∏–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –∞–∫–∫–æ—Ä–¥–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
 */
function getSuggestedChords(lastChordName, tonality) {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∞–∫–∫–æ—Ä–¥–µ
  const lastChord = window.CHORD_DATA[lastChordName];
  if (!lastChord || !lastChord.functions[tonality]) {
    console.warn('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–∫–∫–æ—Ä–¥–∞ –≤ —Ç–µ–∫—É—â–µ–π —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏');
    return [];
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–∫–∫–æ—Ä–¥–∞
  const lastFunction = lastChord.functions[tonality].function;
  
  // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –¥–ª—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  const transitions = harmonicTransitions[lastFunction];
  if (!transitions) {
    console.warn('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏:', lastFunction);
    return [];
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ (–æ—Ç –≤—ã—Å–æ–∫–æ–π –∫ –Ω–∏–∑–∫–æ–π)
  const sortedFunctions = Object.keys(transitions).sort(
    (a, b) => transitions[b] - transitions[a]
  );
  
  // –°–æ–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–∫–∫–æ—Ä–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
  const suggestedChords = [];
  const chordsInTonality = [
    ...window.TONALITY_DATA[tonality].chords.basic,
    ...window.TONALITY_DATA[tonality].chords.seventh
  ];
  
  // –î–ª—è –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∞–∫–∫–æ—Ä–¥—ã
  sortedFunctions.forEach(targetFunction => {
    const confidenceLevel = transitions[targetFunction];
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∞–∫–∫–æ—Ä–¥—ã —Å –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π –≤ —Ç–µ–∫—É—â–µ–π —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    chordsInTonality.forEach(chordName => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ–∫—É—â–∏–π –∞–∫–∫–æ—Ä–¥
      if (chordName === lastChordName) return;
      
      const chord = window.CHORD_DATA[chordName];
      if (chord && chord.functions[tonality] && 
          chord.functions[tonality].function === targetFunction) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫–∫–æ—Ä–¥ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
        suggestedChords.push({
          name: chordName,
          function: targetFunction,
          confidence: confidenceLevel
        });
      }
    });
  });
  
  return suggestedChords;
}

/**
 * –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –∞–∫–∫–æ—Ä–¥–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
 * @param {Array} suggestedChords - –ú–∞—Å—Å–∏–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –∞–∫–∫–æ—Ä–¥–æ–≤
 */
function highlightSuggestedChords(suggestedChords) {
  // –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –∏ —É–¥–∞–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
  document.querySelectorAll('.chord-button').forEach(button => {
    button.classList.remove('suggested-high', 'suggested-medium', 'suggested-low');
    button.removeAttribute('title');
    
    // –£–¥–∞–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    const functionIcon = button.querySelector('.suggestion-function-icon');
    if (functionIcon) {
      functionIcon.remove();
    }
  });
  
  // –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –¥–ª—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –∞–∫–∫–æ—Ä–¥–æ–≤
  suggestedChords.forEach(suggestion => {
    const buttons = document.querySelectorAll(`.chord-button[data-chord="${suggestion.name}"]`);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    let highlightClass = '';
    
    if (suggestion.confidence > 0.5) {
      highlightClass = 'suggested-high';
    } else if (suggestion.confidence > 0.3) {
      highlightClass = 'suggested-medium';
    } else {
      highlightClass = 'suggested-low';
    }
    
    // –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É —Ñ—É–Ω–∫—Ü–∏–∏
    const iconClass = getFunctionIconClass(suggestion.function);
    const iconLabel = getFunctionIconLabel(suggestion.function);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –∏ –∏–∫–æ–Ω–∫—É —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–Ω–æ–ø–∫—É
    buttons.forEach(button => {
      button.classList.add(highlightClass);
      
      // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ñ—É–Ω–∫—Ü–∏–∏
      const functionIcon = document.createElement('span');
      functionIcon.className = `function-icon ${iconClass} suggestion-function-icon`;
      functionIcon.textContent = iconLabel;
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç—É–ª—Ç–∏–ø —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ—É–Ω–∫—Ü–∏–∏
      functionIcon.title = getFunctionLabel(suggestion.function);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∫–Ω–æ–ø–∫—É
      button.appendChild(functionIcon);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
      button.title = `${suggestion.name}`;
    });
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–µ–∫–≤–µ–Ω—Å–æ—Ä–µ
  updateSequencerFunctionIcons();
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–µ–∫–≤–µ–Ω—Å–æ—Ä–µ
 */
function updateSequencerFunctionIcons() {
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–ª–æ—Ç—ã —Å–µ–∫–≤–µ–Ω—Å–æ—Ä–∞
  const sequenceSlots = document.querySelectorAll('.sequence-slot');
  
  // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–∞–Ω–µ–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∫–æ–Ω–∫–∏
  sequenceSlots.forEach(slot => {
    const functionIcon = slot.querySelector('.sequence-function-icon');
    if (functionIcon) {
      functionIcon.remove();
    }
  });
  
  // –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ñ—É–Ω–∫—Ü–∏–∏
  sequenceSlots.forEach(slot => {
    const chordName = slot.querySelector('.slot-chord')?.textContent;
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—É–∑—ã –∏ –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã
    if (!chordName || chordName === 'ùÑΩ') return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    const currentTonality = window.UI.getCurrentTonality();
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–æ—Ä–¥–µ
    const chord = window.CHORD_DATA[chordName];
    if (!chord || !chord.functions[currentTonality]) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∞–∫–∫–æ—Ä–¥–∞
    const chordFunction = chord.functions[currentTonality].function;
    
    // –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É —Ñ—É–Ω–∫—Ü–∏–∏
    const iconClass = getFunctionIconClass(chordFunction);
    const iconLabel = getFunctionIconLabel(chordFunction);
    
    const functionIcon = document.createElement('span');
    functionIcon.className = `function-icon ${iconClass} sequence-function-icon`;
    functionIcon.textContent = iconLabel;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç—É–ª—Ç–∏–ø —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ—É–Ω–∫—Ü–∏–∏
    functionIcon.title = getFunctionLabel(chordFunction);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ —Å–ª–æ—Ç
    slot.appendChild(functionIcon);
  });
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –¥–ª—è –∏–∫–æ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏
 * @param {string} functionName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
 * @returns {string} - CSS –∫–ª–∞—Å—Å –¥–ª—è –∏–∫–æ–Ω–∫–∏
 */
function getFunctionIconClass(functionName) {
  switch(functionName) {
    case 'tonic': return 'tonic';
    case 'dominant': return 'dominant';
    case 'subdominant': return 'subdominant';
    default: return '';
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–∫–∏ –¥–ª—è –∏–∫–æ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏
 * @param {string} functionName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
 * @returns {string} - –¢–µ–∫—Å—Ç –¥–ª—è –∏–∫–æ–Ω–∫–∏
 */
function getFunctionIconLabel(functionName) {
  switch(functionName) {
    case 'tonic': return 'T';
    case 'dominant': return 'D';
    case 'subdominant': return 'S';
    default: return '?';
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–π –º–µ—Ç–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –∞–∫–∫–æ—Ä–¥–∞
 * @param {string} functionName - –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
 * @returns {string} - –ú–µ—Ç–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏
 */
function getFunctionLabel(functionName) {
  switch(functionName) {
    case 'tonic': return '–¢–æ–Ω–∏–∫–∞';
    case 'dominant': return '–î–æ–º–∏–Ω–∞–Ω—Ç–∞';
    case 'subdominant': return '–°—É–±–¥–æ–º–∏–Ω–∞–Ω—Ç–∞';
    default: return functionName;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–∫–∫–æ—Ä–¥–∞ –∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 * @returns {string|null} - –ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–∫–∫–æ—Ä–¥–∞ –∏–ª–∏ null
 */
function getLastChordFromSequence() {
  const sequence = window.Sequencer.getSequence();
  if (!sequence || sequence.length === 0) return null;
  
  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—É–∑—ã –≤ –∫–æ–Ω—Ü–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  for (let i = sequence.length - 1; i >= 0; i--) {
    if (sequence[i] !== 'PAUSE') {
      return sequence[i];
    }
  }
  
  return null;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫
 */
function updateChordSuggestions() {
  const lastChord = getLastChordFromSequence();
  if (!lastChord) {
    // –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—É—Å—Ç–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É –∏ –æ—á–∏—â–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É
    document.querySelectorAll('.chord-button').forEach(button => {
      button.classList.remove('suggested-high', 'suggested-medium', 'suggested-low');
      button.removeAttribute('title');
      
      // –£–¥–∞–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
      const functionIcon = button.querySelector('.suggestion-function-icon');
      if (functionIcon) {
        functionIcon.remove();
      }
    });
    
    // –£–¥–∞–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π –≤ —Å–µ–∫–≤–µ–Ω—Å–æ—Ä–µ
    document.querySelectorAll('.sequence-function-icon').forEach(icon => {
      icon.remove();
    });
    
    currentSuggestions = [];
    return;
  }
  
  const currentTonality = window.UI.getCurrentTonality();
  const suggestedChords = getSuggestedChords(lastChord, currentTonality);
  
  highlightSuggestedChords(suggestedChords);
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
  currentSuggestions = suggestedChords;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∞–∫–∫–æ—Ä–¥–æ–≤
 */
function initChordSuggestions() {
  // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  const hintElement = document.getElementById('theory-hint');
  if (hintElement && hintElement.parentNode) {
    hintElement.parentNode.removeChild(hintElement);
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  document.addEventListener('sequenceChanged', function() {
    updateChordSuggestions();
  });
  
  // –°–ª—É—à–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –≤ —Å–µ–∫–≤–µ–Ω—Å–æ—Ä–µ
  const originalUpdateSequenceDisplay = window.Sequencer.updateSequenceDisplay;
  if (originalUpdateSequenceDisplay) {
    window.Sequencer.updateSequenceDisplay = function() {
      // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
      originalUpdateSequenceDisplay.apply(this, arguments);
      
      // –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ–∫–≤–µ–Ω—Å–æ—Ä–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
      setTimeout(() => {
        updateSequencerFunctionIcons();
      }, 50);
    };
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
  const originalChangeTonality = window.UI.changeTonality;
  
  // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
  window.UI.changeTonality = function(tonality) {
    // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    originalChangeTonality.call(window.UI, tonality);
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
    updateChordSuggestions();
  };
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ–º–ø –¥–æ 10 BPM
  const tempoInput = document.getElementById('tempo-input');
  if (tempoInput) {
    tempoInput.min = "10";
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
  updateChordSuggestions();
}

// –≠–∫—Å–ø–æ—Ä—Ç –º–æ–¥—É–ª—è
window.ChordSuggestions = {
  initChordSuggestions: initChordSuggestions,
  updateChordSuggestions: updateChordSuggestions,
  getSuggestedChords: getSuggestedChords,
  getCurrentSuggestions: function() { return currentSuggestions; }
};